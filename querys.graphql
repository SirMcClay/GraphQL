#1 THE FIRST QUERY
{
  user(id: "47") {
    id
    firstName
    age
  }
}
#RESULT
{
  "data": {
    "user": {
      "id": "47",
      "firstName": "Samantha",
      "age": 21
    }
  }
}

#2 QUERY USER RELATION WITH COMPANY
{
  user(id: "23") {
    id
    firstName
    age
    company {
      id
      name
      description
    }
  }
}
#RESULT
{
  "data": {
    "user": {
      "id": "23",
      "firstName": "Bill",
      "age": 20,
      "company": {
        "id": "1",
        "name": "Apple",
        "description": "iphone"
      }
    }
  }
}

#3 QUERY TO REACH THE COMPANY DIRECTLY
{
  company(id: "1") {
    id
	  name
    description
  }
}
#RESULT
{
  "data": {
    "company": {
      "id": "1",
      "name": "Apple",
      "description": "iphone"
    }
  }
}

#4 QUERY TO REACH COMPANY AND ALL USERS FROM THIS COMPANY
{
  company(id: "2") {
    id
	  name
    description
    users {
      id
      firstName
      age
    }
  }
}

#RESULT
{
  "data": {
    "company": {
      "id": "2",
      "name": "Google",
      "description": "search",
      "users": [
        {
          "id": "40",
          "firstName": "Alex",
          "age": 40
        },
        {
          "id": "41",
          "firstName": "Nick",
          "age": 40
        }
      ]
    }
  }
}

#5 A WEIRD OVER NESTING QUERY EXPLORING CIRCULAR RELATIONS
{
  company(id: "2") {
    id
	  name
    description
    users {
      id
      firstName
      age
      company {
        name
        users {
          firstName
          company {
            name
          }
        }
      }
    }
  }
}
#RESULT
{
  "data": {
    "company": {
      "id": "2",
      "name": "Google",
      "description": "search",
      "users": [
        {
          "id": "40",
          "firstName": "Alex",
          "age": 40,
          "company": {
            "name": "Google",
            "users": [
              {
                "firstName": "Alex",
                "company": {
                  "name": "Google"
                }
              },
              {
                "firstName": "Nick",
                "company": {
                  "name": "Google"
                }
              }
            ]
          }
        },
        {
          "id": "41",
          "firstName": "Nick",
          "age": 40,
          "company": {
            "name": "Google",
            "users": [
              {
                "firstName": "Alex",
                "company": {
                  "name": "Google"
                }
              },
              {
                "firstName": "Nick",
                "company": {
                  "name": "Google"
                }
              }
            ]
          }
        }
      ]
    }
  }
}

#6 A USEFUL KEYWORD QUERY AND A WAY TO NAME THE QUERY
query findCompany {
  company(id: "2") {
    id
	  name
    description
  }
}
#RESULT
{
  "data": {
    "company": {
      "id": "2",
      "name": "Google",
      "description": "search"
    }
  }
}

#7 DOING THE SAME QUERY AND RENAME THE RESULT KEY
{
  apple: company(id: "1") {
    id
	  name
    description
  }
  google: company(id: "2") {
    id
	  name
    description
  }
}
#RESULT
{
  "data": {
    "apple": {
      "id": "1",
      "name": "Apple",
      "description": "iphone"
    },
    "google": {
      "id": "2",
      "name": "Google",
      "description": "search"
    }
  }
}

#8 USING QUERY FRAGMENTS TO AVOID CODE AND PROPERTIES DUPLICATION
{
  apple: company(id: "1") {
    ...companyDetails
  }
  google: company(id: "2") {
    ...companyDetails
  }
}

fragment companyDetails on Company {
  id
  name
  description
}
#RESULT
{
  "data": {
    "apple": {
      "id": "1",
      "name": "Apple",
      "description": "iphone"
    },
    "google": {
      "id": "2",
      "name": "Google",
      "description": "search"
    }
  }
}

#9 RUN A MUTATION TO ADD USER
mutation {
  addUser(firstName: "Stephen", age: 26) {
    id
    firstName
    age
  }
}
#RESULT
{
  "data": {
    "addUser": {
      "id": "cc5YR0v",
      "firstName": "Stephen",
      "age": 26
    }
  }
}

#10 RUN A MUTATION TO DELETE USER
mutation {
  deleteUser(id: "23") {
    id
    firstName
    age
  }
}
#RESULT
{
  "data": {
    "deleteUser": {
      "id": null,
      "firstName": null,
      "age": null
    }
  }
}